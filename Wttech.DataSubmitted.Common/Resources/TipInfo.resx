<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFaile" xml:space="preserve">
    <value>添加失败</value>
  </data>
  <data name="AddFaileHasDelUser" xml:space="preserve">
    <value>用户名为历史曾用名，不能重复使用！</value>
  </data>
  <data name="AddFaileHasUser" xml:space="preserve">
    <value>用户名已被使用！</value>
  </data>
  <data name="AddFaileSelectRole" xml:space="preserve">
    <value>添加失败，请选择角色!</value>
  </data>
  <data name="AddFaileSelectUser" xml:space="preserve">
    <value>添加失败，请输入用户名!</value>
  </data>
  <data name="AddSuccess" xml:space="preserve">
    <value>添加成功</value>
  </data>
  <data name="BatchExportFail" xml:space="preserve">
    <value>导出失败，所选范围内暂无报表可供批量导出！</value>
  </data>
  <data name="CalibrationFaile" xml:space="preserve">
    <value>校正失败！</value>
  </data>
  <data name="CalibrationFaileDate" xml:space="preserve">
    <value>校正失败，参考日期不合理！</value>
  </data>
  <data name="CalibrationFaileHour" xml:space="preserve">
    <value>校正失败，校正时间段不合理！</value>
  </data>
  <data name="CalibrationFaileNoConfig" xml:space="preserve">
    <value>校正失败，无假期配置信息！</value>
  </data>
  <data name="CalibrationFaileNoData" xml:space="preserve">
    <value>校正失败，校正日期无数据！</value>
  </data>
  <data name="CalibrationFaileRefNoData" xml:space="preserve">
    <value>校正失败，参考日期无数据！</value>
  </data>
  <data name="CalibrationRangeFaile" xml:space="preserve">
    <value>校正失败，参考日期范围和校正日期范围不相同！</value>
  </data>
  <data name="CalibrationSuccess" xml:space="preserve">
    <value>校正成功！</value>
  </data>
  <data name="CancelAdd" xml:space="preserve">
    <value>请先保存或取消后再新增用户</value>
  </data>
  <data name="CancelSelect" xml:space="preserve">
    <value>请先保存或取消后再查询</value>
  </data>
  <data name="CancelUpdate" xml:space="preserve">
    <value>请先保存或取消后再编辑</value>
  </data>
  <data name="DataNull" xml:space="preserve">
    <value>当前日期数据为空！</value>
  </data>
  <data name="DateTimeIsNull" xml:space="preserve">
    <value>请选择日期！</value>
  </data>
  <data name="DeleteFaile" xml:space="preserve">
    <value>删除失败！</value>
  </data>
  <data name="DeleteSuccess" xml:space="preserve">
    <value>删除成功！</value>
  </data>
  <data name="ErrorInfo" xml:space="preserve">
    <value>浮动百分比不符合配置！</value>
  </data>
  <data name="Exist" xml:space="preserve">
    <value>数据已存在！</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>操作失败！</value>
  </data>
  <data name="ForecastFail" xml:space="preserve">
    <value>预测失败！</value>
  </data>
  <data name="ForecastFaileFaileRefNoData" xml:space="preserve">
    <value>预测失败，参考日期无数据！</value>
  </data>
  <data name="ForecastFaileHasData" xml:space="preserve">
    <value>预测日期数据已存在！</value>
  </data>
  <data name="ForecastFaileNoConfig" xml:space="preserve">
    <value>预测失败，无假期配置信息！</value>
  </data>
  <data name="ForecastFaileTime" xml:space="preserve">
    <value>预测失败，预测日期不合理！</value>
  </data>
  <data name="ForecastSuccess" xml:space="preserve">
    <value>预测成功！</value>
  </data>
  <data name="HolidayExist" xml:space="preserve">
    <value>假期名称已存在，请勿重复添加！</value>
  </data>
  <data name="Inexist" xml:space="preserve">
    <value>数据不存在！</value>
  </data>
  <data name="InexistHoliday" xml:space="preserve">
    <value>不存在可设置的假期名称配置项！</value>
  </data>
  <data name="InputHolidayName" xml:space="preserve">
    <value>请输入假期名称！</value>
  </data>
  <data name="InputUserName" xml:space="preserve">
    <value>请输入用户名</value>
  </data>
  <data name="NameIsNull" xml:space="preserve">
    <value>用户名为空</value>
  </data>
  <data name="OldPasswordError" xml:space="preserve">
    <value>原始密码不正确！</value>
  </data>
  <data name="PasswordIsNull" xml:space="preserve">
    <value>密码为空</value>
  </data>
  <data name="RecoverFaile" xml:space="preserve">
    <value>恢复失败！</value>
  </data>
  <data name="RecoverSuccess" xml:space="preserve">
    <value>恢复成功！</value>
  </data>
  <data name="SelectRole" xml:space="preserve">
    <value>请选择角色</value>
  </data>
  <data name="SelectUser" xml:space="preserve">
    <value>请选择用户</value>
  </data>
  <data name="StartPassword" xml:space="preserve">
    <value>密码初始化成功！</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>操作成功！</value>
  </data>
  <data name="Unmodified" xml:space="preserve">
    <value>您修改的信息和之前完全一致！</value>
  </data>
  <data name="UpdateDataRepeat" xml:space="preserve">
    <value>修改失败，修改的数据重复或者尚未生成！</value>
  </data>
  <data name="UpdateFaile" xml:space="preserve">
    <value>保存失败！</value>
  </data>
  <data name="UpdateSuccess" xml:space="preserve">
    <value>保存成功！</value>
  </data>
</root>